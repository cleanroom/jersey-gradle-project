buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.flywaydb:flyway-gradle-plugin:3.2.1'
    }
}

apply plugin: 'java'
sourceCompatibility = 1.8
targetCompatibility = 1.8
repositories {
    jcenter()
}

apply plugin: 'war'
apply plugin: 'jetty'
apply plugin: 'org.flywaydb.flyway'
apply plugin: "jacoco"
apply plugin: 'checkstyle'
apply plugin: 'idea'

test {
    beforeTest { descr ->
        logger.warn("Starting Test ${descr.className} : ${descr.name}")
    }
}

jacoco {
    toolVersion = "0.7.4.201502262128"
}

checkstyle {
    toolVersion = "6.14.1"
}


jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
        html.destination "${buildDir}/jacocoHtml"
    }
}


checkstyleMain {
    reports {
        xml {
            destination "build/reports/checkstyle/main.xml"
        }
    }
}


dependencies {
    compile 'mysql:mysql-connector-java:5.1.37'
    compile 'org.mybatis:mybatis:3.3.0'
    compile 'javax.servlet:javax.servlet-api:3.1.0'
    compile 'org.glassfish.jersey:project:2.22.1'
    compile 'org.glassfish.jersey.media:jersey-media-json-jackson:2.22.1'
    compile 'org.glassfish.jersey.core:jersey-server:2.22.1'
    compile 'org.glassfish.grizzly:grizzly-http-server:2.3.24'
    compile 'org.glassfish.jersey.containers:jersey-container-grizzly2-http:2.22.1'

    compile 'org.apache.logging.log4j:log4j-api:2.5'
    compile 'org.apache.logging.log4j:log4j-core:2.5'
    compile 'com.google.code.gson:gson:2.5'
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-all:1.10.19'
    testCompile 'org.hamcrest:hamcrest-all:1.3'
    testCompile 'org.glassfish.jersey.test-framework.providers:jersey-test-framework-provider-grizzly2:2.22.1'
    testCompile 'org.flywaydb:flyway-core:3.2.1'
}

task(DBRecovery, dependsOn: 'classes', type: JavaExec) {
    doFirst {
        flywayClean.execute()
        flywayMigrate.execute()
    }
    main = 'com.thoughtworks.twars.tasks.DBRecovery'
    classpath = sourceSets.main.runtimeClasspath
}

[jettyRun, jettyRunWar, jettyStop]*.stopPort = 8081
[jettyRun, jettyRunWar, jettyStop]*.stopKey = 'stopKey'

task createCoberturaReport(type: Exec) {
    executable "bash"
    args "-c", "mkdir ./build/reports/cobertura && ./tools/cover2cover.py ./build/reports/jacoco/test/jacocoTestReport.xml src/main/java > ./build/reports/cobertura/coverage.xml"
}

task runApp(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath

    main = 'com.thoughtworks.learning.App'

}
